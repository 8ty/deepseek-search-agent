name: 🔍 DeepSeek 搜索代理

on:
  repository_dispatch:
    types: [search_trigger]
  workflow_dispatch:
    inputs:
      query:
        description: '搜索查询'
        required: true
        type: string
      callback_url:
        description: '回调 URL'
        required: false
        type: string
      workspace_id:
        description: '工作空间 ID'
        required: false
        type: string
      max_results:
        description: '最大结果数'
        required: false
        type: string
        default: '10'

jobs:
  search:
    runs-on: ubuntu-latest
    
    steps:
    - name: 🛠️ 检出代码
      uses: actions/checkout@v4
      
    - name: 🐍 设置 Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
        
    - name: 📦 安装依赖
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: 🔍 执行搜索
      env:
        OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
        JINA_API_KEY: ${{ secrets.JINA_API_KEY }}
        ENVIRONMENT: "production"
        # 从 repository_dispatch 获取参数
        SEARCH_QUERY: ${{ github.event.client_payload.query || inputs.query }}
        CALLBACK_URL: ${{ github.event.client_payload.callback_url || inputs.callback_url }}
        WORKSPACE_ID: ${{ github.event.client_payload.workspace_id || inputs.workspace_id }}
        MAX_RESULTS: ${{ github.event.client_payload.max_results || inputs.max_results }}
        INCLUDE_SCRAPING: ${{ github.event.client_payload.include_scraping || 'true' }}
        # GitHub 信息
        GITHUB_REPOSITORY: ${{ github.repository }}
        GITHUB_REF: ${{ github.ref }}
        GITHUB_SHA: ${{ github.sha }}
        GITHUB_ACTIONS: "true"
        RUNNER_OS: ${{ runner.os }}
      run: |
        echo "🚀 启动 DeepSeek 搜索代理"
        echo "📋 搜索查询: $SEARCH_QUERY"
        echo "📞 回调 URL: $CALLBACK_URL"
        echo "🏠 工作空间: $WORKSPACE_ID"
        echo "📊 最大结果: $MAX_RESULTS"
        echo "🔧 包含抓取: $INCLUDE_SCRAPING"
        echo "🌍 环境: $ENVIRONMENT"
        
        # 使用新的模块化架构运行搜索代理
        python -m api.github_runner
        
    - name: 📋 输出执行信息
      if: always()
      run: |
        echo "✅ 搜索代理执行完成"
        echo "⏰ 执行时间: $(date)"
        echo "🔧 运行环境: ${{ runner.os }}"
        echo "🐍 Python 版本: $(python --version)"